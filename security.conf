# Configuração de Segurança - Ordem do Dia
# Este arquivo define as configurações de segurança para o projeto

# ========================================
# CONFIGURAÇÕES DO BANDIT
# ========================================

[bandit]
# Diretórios para excluir da análise
exclude_dirs = .venv,venv,tests,build_temp,htmlcov,distribuicao,distribuicao_completa,__pycache__

# Testes específicos para pular (apenas os que são seguros no nosso contexto)
skips = B101,B601,B603,B607,B404,B603

# Explicação dos skips:
# B101: assert statements (usados em testes)
# B404: import subprocess (necessário para build)
# B601: shell=True (controlado e seguro no nosso contexto)
# B603: subprocess sem shell (não é problema)
# B607: executável com caminho parcial (controlado)

# Apenas problemas de severidade média e alta
severity = MEDIUM,HIGH
confidence = MEDIUM,HIGH

# ========================================
# TIMEOUTS E LIMITES DE SEGURANÇA
# ========================================

# Timeout padrão para requests HTTP
HTTP_TIMEOUT = 30

# Limite máximo de tamanho de arquivo para processamento (MB)
MAX_FILE_SIZE = 100

# Limite de memória para operações (MB)
MAX_MEMORY_USAGE = 500

# ========================================
# CONFIGURAÇÕES DE BUILD SEGURO
# ========================================

# Validação de integridade de executáveis
ENABLE_INTEGRITY_CHECK = true

# Assinatura digital (quando disponível)
ENABLE_CODE_SIGNING = false

# Verificação de dependências
CHECK_DEPENDENCIES = true

# ========================================
# EXCLUSÕES ESPECÍFICAS
# ========================================

# Arquivos que podem conter senhas/tokens mas são seguros
SAFE_PASSWORD_FILES = [
    "config_dias_filmagem.json",  # Apenas configurações de negócio
    "pytest.ini",                 # Configurações de teste
]

# Comandos shell seguros (usados no build)
SAFE_SHELL_COMMANDS = [
    "pyinstaller",
    "python",
    "pip",
    "pytest",
    "black",
    "flake8"
]
